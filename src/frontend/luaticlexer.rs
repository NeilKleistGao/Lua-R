// Generated from Luatic.g4 by ANTLR 4.8
#![allow(dead_code)]
#![allow(nonstandard_style)]
#![allow(unused_imports)]
#![allow(unused_variables)]
use antlr_rust::atn::ATN;
use antlr_rust::char_stream::CharStream;
use antlr_rust::int_stream::IntStream;
use antlr_rust::lexer::{BaseLexer, Lexer, LexerRecog};
use antlr_rust::atn_deserializer::ATNDeserializer;
use antlr_rust::dfa::DFA;
use antlr_rust::lexer_atn_simulator::{LexerATNSimulator, ILexerATNSimulator};
use antlr_rust::PredictionContextCache;
use antlr_rust::recognizer::{Recognizer,Actions};
use antlr_rust::error_listener::ErrorListener;
use antlr_rust::TokenSource;
use antlr_rust::token_factory::{TokenFactory,CommonTokenFactory,TokenAware};
use antlr_rust::token::*;
use antlr_rust::rule_context::{BaseRuleContext,EmptyCustomRuleContext,EmptyContext};
use antlr_rust::parser_rule_context::{ParserRuleContext,BaseParserRuleContext,cast};
use antlr_rust::vocabulary::{Vocabulary,VocabularyImpl};

use antlr_rust::{lazy_static,Tid,TidAble,TidExt};

use std::sync::Arc;
use std::cell::RefCell;
use std::rc::Rc;
use std::marker::PhantomData;
use std::ops::{Deref, DerefMut};


	pub const PT_SEMI:isize=1; 
	pub const PT_COLON:isize=2; 
	pub const PT_COMMA:isize=3; 
	pub const PT_ASGN:isize=4; 
	pub const PT_LT:isize=5; 
	pub const PT_RT:isize=6; 
	pub const PT_LP:isize=7; 
	pub const PT_RP:isize=8; 
	pub const PT_LB:isize=9; 
	pub const PT_RB:isize=10; 
	pub const PT_LS:isize=11; 
	pub const PT_RS:isize=12; 
	pub const PT_PLUS:isize=13; 
	pub const PT_MINUS:isize=14; 
	pub const PT_MUL:isize=15; 
	pub const PT_DIV:isize=16; 
	pub const PT_IDIV:isize=17; 
	pub const PT_MOD:isize=18; 
	pub const PT_LE:isize=19; 
	pub const PT_GE:isize=20; 
	pub const PT_EQ:isize=21; 
	pub const PT_NE:isize=22; 
	pub const PT_AND:isize=23; 
	pub const PT_OR:isize=24; 
	pub const PT_XN:isize=25; 
	pub const PT_LSF:isize=26; 
	pub const PT_RSF:isize=27; 
	pub const PT_POW:isize=28; 
	pub const ANNO_LANG:isize=29; 
	pub const IDENT:isize=30; 
	pub const NORMALSTRING:isize=31; 
	pub const CHARASTRING:isize=32; 
	pub const INT:isize=33; 
	pub const HEX:isize=34; 
	pub const FLOAT:isize=35; 
	pub const HEX_FLOAT:isize=36; 
	pub const COMMENT:isize=37; 
	pub const LINE_COMMENT:isize=38; 
	pub const WS:isize=39;
	pub const channelNames: [&'static str;0+2] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	];

	pub const modeNames: [&'static str;1] = [
		"DEFAULT_MODE"
	];

	pub const ruleNames: [&'static str;48] = [
		"PT_SEMI", "PT_COLON", "PT_COMMA", "PT_ASGN", "PT_LT", "PT_RT", "PT_LP", 
		"PT_RP", "PT_LB", "PT_RB", "PT_LS", "PT_RS", "PT_PLUS", "PT_MINUS", "PT_MUL", 
		"PT_DIV", "PT_IDIV", "PT_MOD", "PT_LE", "PT_GE", "PT_EQ", "PT_NE", "PT_AND", 
		"PT_OR", "PT_XN", "PT_LSF", "PT_RSF", "PT_POW", "ANNO_LANG", "IDENT", 
		"NORMALSTRING", "CHARASTRING", "INT", "HEX", "FLOAT", "HEX_FLOAT", "ExponentPart", 
		"HexExponentPart", "DecimalEscape", "EscapeSequence", "HexEscape", "UtfEscape", 
		"Digit", "HexDigit", "NESTED_STR", "COMMENT", "LINE_COMMENT", "WS"
	];


	pub const _LITERAL_NAMES: [Option<&'static str>;30] = [
		None, Some("';'"), Some("':'"), Some("','"), Some("'='"), Some("'<'"), 
		Some("'>'"), Some("'('"), Some("')'"), Some("'{'"), Some("'}'"), Some("'['"), 
		Some("']'"), Some("'+'"), Some("'-'"), Some("'*'"), Some("'/'"), Some("'//'"), 
		Some("'%'"), Some("'<='"), Some("'>='"), Some("'=='"), Some("'~='"), Some("'&'"), 
		Some("'|'"), Some("'~'"), Some("'<<'"), Some("'>>'"), Some("'^'"), Some("'#lang'")
	];
	pub const _SYMBOLIC_NAMES: [Option<&'static str>;40]  = [
		None, Some("PT_SEMI"), Some("PT_COLON"), Some("PT_COMMA"), Some("PT_ASGN"), 
		Some("PT_LT"), Some("PT_RT"), Some("PT_LP"), Some("PT_RP"), Some("PT_LB"), 
		Some("PT_RB"), Some("PT_LS"), Some("PT_RS"), Some("PT_PLUS"), Some("PT_MINUS"), 
		Some("PT_MUL"), Some("PT_DIV"), Some("PT_IDIV"), Some("PT_MOD"), Some("PT_LE"), 
		Some("PT_GE"), Some("PT_EQ"), Some("PT_NE"), Some("PT_AND"), Some("PT_OR"), 
		Some("PT_XN"), Some("PT_LSF"), Some("PT_RSF"), Some("PT_POW"), Some("ANNO_LANG"), 
		Some("IDENT"), Some("NORMALSTRING"), Some("CHARASTRING"), Some("INT"), 
		Some("HEX"), Some("FLOAT"), Some("HEX_FLOAT"), Some("COMMENT"), Some("LINE_COMMENT"), 
		Some("WS")
	];
	lazy_static!{
	    static ref _shared_context_cache: Arc<PredictionContextCache> = Arc::new(PredictionContextCache::new());
		static ref VOCABULARY: Box<dyn Vocabulary> = Box::new(VocabularyImpl::new(_LITERAL_NAMES.iter(), _SYMBOLIC_NAMES.iter(), None));
	}


pub type LexerContext<'input> = BaseRuleContext<'input,EmptyCustomRuleContext<'input,LocalTokenFactory<'input> >>;
pub type LocalTokenFactory<'input> = CommonTokenFactory;

type From<'a> = <LocalTokenFactory<'a> as TokenFactory<'a> >::From;

pub struct LuaticLexer<'input, Input:CharStream<From<'input> >> {
	base: BaseLexer<'input,LuaticLexerActions,Input,LocalTokenFactory<'input>>,
}

antlr_rust::tid! { impl<'input,Input> TidAble<'input> for LuaticLexer<'input,Input> where Input:CharStream<From<'input> > }

impl<'input, Input:CharStream<From<'input> >> Deref for LuaticLexer<'input,Input>{
	type Target = BaseLexer<'input,LuaticLexerActions,Input,LocalTokenFactory<'input>>;

	fn deref(&self) -> &Self::Target {
		&self.base
	}
}

impl<'input, Input:CharStream<From<'input> >> DerefMut for LuaticLexer<'input,Input>{
	fn deref_mut(&mut self) -> &mut Self::Target {
		&mut self.base
	}
}


impl<'input, Input:CharStream<From<'input> >> LuaticLexer<'input,Input>{
    fn get_rule_names(&self) -> &'static [&'static str] {
        &ruleNames
    }
    fn get_literal_names(&self) -> &[Option<&str>] {
        &_LITERAL_NAMES
    }

    fn get_symbolic_names(&self) -> &[Option<&str>] {
        &_SYMBOLIC_NAMES
    }

    fn get_grammar_file_name(&self) -> &'static str {
        "LuaticLexer.g4"
    }

	pub fn new_with_token_factory(input: Input, tf: &'input LocalTokenFactory<'input>) -> Self {
		antlr_rust::recognizer::check_version("0","3");
    	Self {
			base: BaseLexer::new_base_lexer(
				input,
				LexerATNSimulator::new_lexer_atnsimulator(
					_ATN.clone(),
					_decision_to_DFA.clone(),
					_shared_context_cache.clone(),
				),
				LuaticLexerActions{},
				tf
			)
	    }
	}
}

impl<'input, Input:CharStream<From<'input> >> LuaticLexer<'input,Input> where &'input LocalTokenFactory<'input>:Default{
	pub fn new(input: Input) -> Self{
		LuaticLexer::new_with_token_factory(input, <&LocalTokenFactory<'input> as Default>::default())
	}
}

pub struct LuaticLexerActions {
}

impl LuaticLexerActions{
}

impl<'input, Input:CharStream<From<'input> >> Actions<'input,BaseLexer<'input,LuaticLexerActions,Input,LocalTokenFactory<'input>>> for LuaticLexerActions{
	}

	impl<'input, Input:CharStream<From<'input> >> LuaticLexer<'input,Input>{

}

impl<'input, Input:CharStream<From<'input> >> LexerRecog<'input,BaseLexer<'input,LuaticLexerActions,Input,LocalTokenFactory<'input>>> for LuaticLexerActions{
}
impl<'input> TokenAware<'input> for LuaticLexerActions{
	type TF = LocalTokenFactory<'input>;
}

impl<'input, Input:CharStream<From<'input> >> TokenSource<'input> for LuaticLexer<'input,Input>{
	type TF = LocalTokenFactory<'input>;

    fn next_token(&mut self) -> <Self::TF as TokenFactory<'input>>::Tok {
        self.base.next_token()
    }

    fn get_line(&self) -> isize {
        self.base.get_line()
    }

    fn get_char_position_in_line(&self) -> isize {
        self.base.get_char_position_in_line()
    }

    fn get_input_stream(&mut self) -> Option<&mut dyn IntStream> {
        self.base.get_input_stream()
    }

	fn get_source_name(&self) -> String {
		self.base.get_source_name()
	}

    fn get_token_factory(&self) -> &'input Self::TF {
        self.base.get_token_factory()
    }
}



	lazy_static! {
	    static ref _ATN: Arc<ATN> =
	        Arc::new(ATNDeserializer::new(None).deserialize(_serializedATN.chars()));
	    static ref _decision_to_DFA: Arc<Vec<antlr_rust::RwLock<DFA>>> = {
	        let mut dfa = Vec::new();
	        let size = _ATN.decision_to_state.len();
	        for i in 0..size {
	            dfa.push(DFA::new(
	                _ATN.clone(),
	                _ATN.get_decision_state(i),
	                i as isize,
	            ).into())
	        }
	        Arc::new(dfa)
	    };
	}



	const _serializedATN:&'static str =
		"\x03\u{608b}\u{a72a}\u{8133}\u{b9ed}\u{417c}\u{3be7}\u{7786}\u{5964}\x02\
		\x29\u{19d}\x08\x01\x04\x02\x09\x02\x04\x03\x09\x03\x04\x04\x09\x04\x04\
		\x05\x09\x05\x04\x06\x09\x06\x04\x07\x09\x07\x04\x08\x09\x08\x04\x09\x09\
		\x09\x04\x0a\x09\x0a\x04\x0b\x09\x0b\x04\x0c\x09\x0c\x04\x0d\x09\x0d\x04\
		\x0e\x09\x0e\x04\x0f\x09\x0f\x04\x10\x09\x10\x04\x11\x09\x11\x04\x12\x09\
		\x12\x04\x13\x09\x13\x04\x14\x09\x14\x04\x15\x09\x15\x04\x16\x09\x16\x04\
		\x17\x09\x17\x04\x18\x09\x18\x04\x19\x09\x19\x04\x1a\x09\x1a\x04\x1b\x09\
		\x1b\x04\x1c\x09\x1c\x04\x1d\x09\x1d\x04\x1e\x09\x1e\x04\x1f\x09\x1f\x04\
		\x20\x09\x20\x04\x21\x09\x21\x04\x22\x09\x22\x04\x23\x09\x23\x04\x24\x09\
		\x24\x04\x25\x09\x25\x04\x26\x09\x26\x04\x27\x09\x27\x04\x28\x09\x28\x04\
		\x29\x09\x29\x04\x2a\x09\x2a\x04\x2b\x09\x2b\x04\x2c\x09\x2c\x04\x2d\x09\
		\x2d\x04\x2e\x09\x2e\x04\x2f\x09\x2f\x04\x30\x09\x30\x04\x31\x09\x31\x03\
		\x02\x03\x02\x03\x03\x03\x03\x03\x04\x03\x04\x03\x05\x03\x05\x03\x06\x03\
		\x06\x03\x07\x03\x07\x03\x08\x03\x08\x03\x09\x03\x09\x03\x0a\x03\x0a\x03\
		\x0b\x03\x0b\x03\x0c\x03\x0c\x03\x0d\x03\x0d\x03\x0e\x03\x0e\x03\x0f\x03\
		\x0f\x03\x10\x03\x10\x03\x11\x03\x11\x03\x12\x03\x12\x03\x12\x03\x13\x03\
		\x13\x03\x14\x03\x14\x03\x14\x03\x15\x03\x15\x03\x15\x03\x16\x03\x16\x03\
		\x16\x03\x17\x03\x17\x03\x17\x03\x18\x03\x18\x03\x19\x03\x19\x03\x1a\x03\
		\x1a\x03\x1b\x03\x1b\x03\x1b\x03\x1c\x03\x1c\x03\x1c\x03\x1d\x03\x1d\x03\
		\x1e\x03\x1e\x03\x1e\x03\x1e\x03\x1e\x03\x1e\x03\x1f\x03\x1f\x07\x1f\u{ab}\
		\x0a\x1f\x0c\x1f\x0e\x1f\u{ae}\x0b\x1f\x03\x20\x03\x20\x03\x20\x07\x20\
		\u{b3}\x0a\x20\x0c\x20\x0e\x20\u{b6}\x0b\x20\x03\x20\x03\x20\x03\x21\x03\
		\x21\x03\x21\x07\x21\u{bd}\x0a\x21\x0c\x21\x0e\x21\u{c0}\x0b\x21\x03\x21\
		\x03\x21\x03\x22\x06\x22\u{c5}\x0a\x22\x0d\x22\x0e\x22\u{c6}\x03\x23\x03\
		\x23\x03\x23\x06\x23\u{cc}\x0a\x23\x0d\x23\x0e\x23\u{cd}\x03\x24\x06\x24\
		\u{d1}\x0a\x24\x0d\x24\x0e\x24\u{d2}\x03\x24\x03\x24\x07\x24\u{d7}\x0a\
		\x24\x0c\x24\x0e\x24\u{da}\x0b\x24\x03\x24\x05\x24\u{dd}\x0a\x24\x03\x24\
		\x03\x24\x06\x24\u{e1}\x0a\x24\x0d\x24\x0e\x24\u{e2}\x03\x24\x05\x24\u{e6}\
		\x0a\x24\x03\x24\x06\x24\u{e9}\x0a\x24\x0d\x24\x0e\x24\u{ea}\x03\x24\x03\
		\x24\x05\x24\u{ef}\x0a\x24\x03\x25\x03\x25\x03\x25\x06\x25\u{f4}\x0a\x25\
		\x0d\x25\x0e\x25\u{f5}\x03\x25\x03\x25\x07\x25\u{fa}\x0a\x25\x0c\x25\x0e\
		\x25\u{fd}\x0b\x25\x03\x25\x05\x25\u{100}\x0a\x25\x03\x25\x03\x25\x03\x25\
		\x03\x25\x06\x25\u{106}\x0a\x25\x0d\x25\x0e\x25\u{107}\x03\x25\x05\x25\
		\u{10b}\x0a\x25\x03\x25\x03\x25\x03\x25\x06\x25\u{110}\x0a\x25\x0d\x25\
		\x0e\x25\u{111}\x03\x25\x03\x25\x05\x25\u{116}\x0a\x25\x03\x26\x03\x26\
		\x05\x26\u{11a}\x0a\x26\x03\x26\x06\x26\u{11d}\x0a\x26\x0d\x26\x0e\x26\
		\u{11e}\x03\x27\x03\x27\x05\x27\u{123}\x0a\x27\x03\x27\x06\x27\u{126}\x0a\
		\x27\x0d\x27\x0e\x27\u{127}\x03\x28\x03\x28\x03\x28\x03\x28\x03\x28\x03\
		\x28\x03\x28\x03\x28\x03\x28\x03\x28\x03\x28\x05\x28\u{135}\x0a\x28\x03\
		\x29\x03\x29\x03\x29\x03\x29\x05\x29\u{13b}\x0a\x29\x03\x29\x03\x29\x03\
		\x29\x03\x29\x05\x29\u{141}\x0a\x29\x03\x2a\x03\x2a\x03\x2a\x03\x2a\x03\
		\x2a\x03\x2b\x03\x2b\x03\x2b\x03\x2b\x03\x2b\x06\x2b\u{14d}\x0a\x2b\x0d\
		\x2b\x0e\x2b\u{14e}\x03\x2b\x03\x2b\x03\x2c\x03\x2c\x03\x2d\x03\x2d\x03\
		\x2e\x03\x2e\x03\x2e\x03\x2e\x03\x2e\x03\x2e\x07\x2e\u{15d}\x0a\x2e\x0c\
		\x2e\x0e\x2e\u{160}\x0b\x2e\x03\x2e\x05\x2e\u{163}\x0a\x2e\x03\x2f\x03\
		\x2f\x03\x2f\x03\x2f\x03\x2f\x03\x2f\x03\x2f\x03\x2f\x03\x2f\x03\x30\x03\
		\x30\x03\x30\x03\x30\x03\x30\x03\x30\x07\x30\u{174}\x0a\x30\x0c\x30\x0e\
		\x30\u{177}\x0b\x30\x03\x30\x03\x30\x07\x30\u{17b}\x0a\x30\x0c\x30\x0e\
		\x30\u{17e}\x0b\x30\x03\x30\x03\x30\x07\x30\u{182}\x0a\x30\x0c\x30\x0e\
		\x30\u{185}\x0b\x30\x03\x30\x03\x30\x07\x30\u{189}\x0a\x30\x0c\x30\x0e\
		\x30\u{18c}\x0b\x30\x05\x30\u{18e}\x0a\x30\x03\x30\x03\x30\x03\x30\x05\
		\x30\u{193}\x0a\x30\x03\x30\x03\x30\x03\x31\x06\x31\u{198}\x0a\x31\x0d\
		\x31\x0e\x31\u{199}\x03\x31\x03\x31\x03\u{15e}\x02\x32\x03\x03\x05\x04\
		\x07\x05\x09\x06\x0b\x07\x0d\x08\x0f\x09\x11\x0a\x13\x0b\x15\x0c\x17\x0d\
		\x19\x0e\x1b\x0f\x1d\x10\x1f\x11\x21\x12\x23\x13\x25\x14\x27\x15\x29\x16\
		\x2b\x17\x2d\x18\x2f\x19\x31\x1a\x33\x1b\x35\x1c\x37\x1d\x39\x1e\x3b\x1f\
		\x3d\x20\x3f\x21\x41\x22\x43\x23\x45\x24\x47\x25\x49\x26\x4b\x02\x4d\x02\
		\x4f\x02\x51\x02\x53\x02\x55\x02\x57\x02\x59\x02\x5b\x02\x5d\x27\x5f\x28\
		\x61\x29\x03\x02\x13\x05\x02\x43\x5c\x61\x61\x63\x7c\x06\x02\x32\x3b\x43\
		\x5c\x61\x61\x63\x7c\x04\x02\x24\x24\x5e\x5e\x03\x02\x5d\x5f\x04\x02\x5a\
		\x5a\x7a\x7a\x04\x02\x47\x47\x67\x67\x04\x02\x2d\x2d\x2f\x2f\x04\x02\x52\
		\x52\x72\x72\x03\x02\x32\x34\x0c\x02\x24\x24\x29\x29\x5e\x5e\x63\x64\x68\
		\x68\x70\x70\x74\x74\x76\x76\x78\x78\x7c\x7c\x03\x02\x32\x3b\x05\x02\x32\
		\x3b\x43\x48\x63\x68\x06\x02\x0c\x0c\x0f\x0f\x3f\x3f\x5d\x5d\x04\x02\x0c\
		\x0c\x0f\x0f\x05\x02\x0c\x0c\x0f\x0f\x5d\x5d\x04\x03\x0c\x0c\x0f\x0f\x05\
		\x02\x0b\x0c\x0e\x0f\x22\x22\x02\u{1c1}\x02\x03\x03\x02\x02\x02\x02\x05\
		\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\x09\x03\x02\x02\x02\x02\x0b\
		\x03\x02\x02\x02\x02\x0d\x03\x02\x02\x02\x02\x0f\x03\x02\x02\x02\x02\x11\
		\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\
		\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1b\x03\x02\x02\x02\x02\x1d\
		\x03\x02\x02\x02\x02\x1f\x03\x02\x02\x02\x02\x21\x03\x02\x02\x02\x02\x23\
		\x03\x02\x02\x02\x02\x25\x03\x02\x02\x02\x02\x27\x03\x02\x02\x02\x02\x29\
		\x03\x02\x02\x02\x02\x2b\x03\x02\x02\x02\x02\x2d\x03\x02\x02\x02\x02\x2f\
		\x03\x02\x02\x02\x02\x31\x03\x02\x02\x02\x02\x33\x03\x02\x02\x02\x02\x35\
		\x03\x02\x02\x02\x02\x37\x03\x02\x02\x02\x02\x39\x03\x02\x02\x02\x02\x3b\
		\x03\x02\x02\x02\x02\x3d\x03\x02\x02\x02\x02\x3f\x03\x02\x02\x02\x02\x41\
		\x03\x02\x02\x02\x02\x43\x03\x02\x02\x02\x02\x45\x03\x02\x02\x02\x02\x47\
		\x03\x02\x02\x02\x02\x49\x03\x02\x02\x02\x02\x5d\x03\x02\x02\x02\x02\x5f\
		\x03\x02\x02\x02\x02\x61\x03\x02\x02\x02\x03\x63\x03\x02\x02\x02\x05\x65\
		\x03\x02\x02\x02\x07\x67\x03\x02\x02\x02\x09\x69\x03\x02\x02\x02\x0b\x6b\
		\x03\x02\x02\x02\x0d\x6d\x03\x02\x02\x02\x0f\x6f\x03\x02\x02\x02\x11\x71\
		\x03\x02\x02\x02\x13\x73\x03\x02\x02\x02\x15\x75\x03\x02\x02\x02\x17\x77\
		\x03\x02\x02\x02\x19\x79\x03\x02\x02\x02\x1b\x7b\x03\x02\x02\x02\x1d\x7d\
		\x03\x02\x02\x02\x1f\x7f\x03\x02\x02\x02\x21\u{81}\x03\x02\x02\x02\x23\
		\u{83}\x03\x02\x02\x02\x25\u{86}\x03\x02\x02\x02\x27\u{88}\x03\x02\x02\
		\x02\x29\u{8b}\x03\x02\x02\x02\x2b\u{8e}\x03\x02\x02\x02\x2d\u{91}\x03\
		\x02\x02\x02\x2f\u{94}\x03\x02\x02\x02\x31\u{96}\x03\x02\x02\x02\x33\u{98}\
		\x03\x02\x02\x02\x35\u{9a}\x03\x02\x02\x02\x37\u{9d}\x03\x02\x02\x02\x39\
		\u{a0}\x03\x02\x02\x02\x3b\u{a2}\x03\x02\x02\x02\x3d\u{a8}\x03\x02\x02\
		\x02\x3f\u{af}\x03\x02\x02\x02\x41\u{b9}\x03\x02\x02\x02\x43\u{c4}\x03\
		\x02\x02\x02\x45\u{c8}\x03\x02\x02\x02\x47\u{ee}\x03\x02\x02\x02\x49\u{115}\
		\x03\x02\x02\x02\x4b\u{117}\x03\x02\x02\x02\x4d\u{120}\x03\x02\x02\x02\
		\x4f\u{134}\x03\x02\x02\x02\x51\u{140}\x03\x02\x02\x02\x53\u{142}\x03\x02\
		\x02\x02\x55\u{147}\x03\x02\x02\x02\x57\u{152}\x03\x02\x02\x02\x59\u{154}\
		\x03\x02\x02\x02\x5b\u{162}\x03\x02\x02\x02\x5d\u{164}\x03\x02\x02\x02\
		\x5f\u{16d}\x03\x02\x02\x02\x61\u{197}\x03\x02\x02\x02\x63\x64\x07\x3d\
		\x02\x02\x64\x04\x03\x02\x02\x02\x65\x66\x07\x3c\x02\x02\x66\x06\x03\x02\
		\x02\x02\x67\x68\x07\x2e\x02\x02\x68\x08\x03\x02\x02\x02\x69\x6a\x07\x3f\
		\x02\x02\x6a\x0a\x03\x02\x02\x02\x6b\x6c\x07\x3e\x02\x02\x6c\x0c\x03\x02\
		\x02\x02\x6d\x6e\x07\x40\x02\x02\x6e\x0e\x03\x02\x02\x02\x6f\x70\x07\x2a\
		\x02\x02\x70\x10\x03\x02\x02\x02\x71\x72\x07\x2b\x02\x02\x72\x12\x03\x02\
		\x02\x02\x73\x74\x07\x7d\x02\x02\x74\x14\x03\x02\x02\x02\x75\x76\x07\x7f\
		\x02\x02\x76\x16\x03\x02\x02\x02\x77\x78\x07\x5d\x02\x02\x78\x18\x03\x02\
		\x02\x02\x79\x7a\x07\x5f\x02\x02\x7a\x1a\x03\x02\x02\x02\x7b\x7c\x07\x2d\
		\x02\x02\x7c\x1c\x03\x02\x02\x02\x7d\x7e\x07\x2f\x02\x02\x7e\x1e\x03\x02\
		\x02\x02\x7f\u{80}\x07\x2c\x02\x02\u{80}\x20\x03\x02\x02\x02\u{81}\u{82}\
		\x07\x31\x02\x02\u{82}\x22\x03\x02\x02\x02\u{83}\u{84}\x07\x31\x02\x02\
		\u{84}\u{85}\x07\x31\x02\x02\u{85}\x24\x03\x02\x02\x02\u{86}\u{87}\x07\
		\x27\x02\x02\u{87}\x26\x03\x02\x02\x02\u{88}\u{89}\x07\x3e\x02\x02\u{89}\
		\u{8a}\x07\x3f\x02\x02\u{8a}\x28\x03\x02\x02\x02\u{8b}\u{8c}\x07\x40\x02\
		\x02\u{8c}\u{8d}\x07\x3f\x02\x02\u{8d}\x2a\x03\x02\x02\x02\u{8e}\u{8f}\
		\x07\x3f\x02\x02\u{8f}\u{90}\x07\x3f\x02\x02\u{90}\x2c\x03\x02\x02\x02\
		\u{91}\u{92}\x07\u{80}\x02\x02\u{92}\u{93}\x07\x3f\x02\x02\u{93}\x2e\x03\
		\x02\x02\x02\u{94}\u{95}\x07\x28\x02\x02\u{95}\x30\x03\x02\x02\x02\u{96}\
		\u{97}\x07\x7e\x02\x02\u{97}\x32\x03\x02\x02\x02\u{98}\u{99}\x07\u{80}\
		\x02\x02\u{99}\x34\x03\x02\x02\x02\u{9a}\u{9b}\x07\x3e\x02\x02\u{9b}\u{9c}\
		\x07\x3e\x02\x02\u{9c}\x36\x03\x02\x02\x02\u{9d}\u{9e}\x07\x40\x02\x02\
		\u{9e}\u{9f}\x07\x40\x02\x02\u{9f}\x38\x03\x02\x02\x02\u{a0}\u{a1}\x07\
		\x60\x02\x02\u{a1}\x3a\x03\x02\x02\x02\u{a2}\u{a3}\x07\x25\x02\x02\u{a3}\
		\u{a4}\x07\x6e\x02\x02\u{a4}\u{a5}\x07\x63\x02\x02\u{a5}\u{a6}\x07\x70\
		\x02\x02\u{a6}\u{a7}\x07\x69\x02\x02\u{a7}\x3c\x03\x02\x02\x02\u{a8}\u{ac}\
		\x09\x02\x02\x02\u{a9}\u{ab}\x09\x03\x02\x02\u{aa}\u{a9}\x03\x02\x02\x02\
		\u{ab}\u{ae}\x03\x02\x02\x02\u{ac}\u{aa}\x03\x02\x02\x02\u{ac}\u{ad}\x03\
		\x02\x02\x02\u{ad}\x3e\x03\x02\x02\x02\u{ae}\u{ac}\x03\x02\x02\x02\u{af}\
		\u{b4}\x07\x24\x02\x02\u{b0}\u{b3}\x05\x51\x29\x02\u{b1}\u{b3}\x0a\x04\
		\x02\x02\u{b2}\u{b0}\x03\x02\x02\x02\u{b2}\u{b1}\x03\x02\x02\x02\u{b3}\
		\u{b6}\x03\x02\x02\x02\u{b4}\u{b2}\x03\x02\x02\x02\u{b4}\u{b5}\x03\x02\
		\x02\x02\u{b5}\u{b7}\x03\x02\x02\x02\u{b6}\u{b4}\x03\x02\x02\x02\u{b7}\
		\u{b8}\x07\x24\x02\x02\u{b8}\x40\x03\x02\x02\x02\u{b9}\u{be}\x07\x5d\x02\
		\x02\u{ba}\u{bd}\x05\x51\x29\x02\u{bb}\u{bd}\x0a\x05\x02\x02\u{bc}\u{ba}\
		\x03\x02\x02\x02\u{bc}\u{bb}\x03\x02\x02\x02\u{bd}\u{c0}\x03\x02\x02\x02\
		\u{be}\u{bc}\x03\x02\x02\x02\u{be}\u{bf}\x03\x02\x02\x02\u{bf}\u{c1}\x03\
		\x02\x02\x02\u{c0}\u{be}\x03\x02\x02\x02\u{c1}\u{c2}\x07\x5f\x02\x02\u{c2}\
		\x42\x03\x02\x02\x02\u{c3}\u{c5}\x05\x57\x2c\x02\u{c4}\u{c3}\x03\x02\x02\
		\x02\u{c5}\u{c6}\x03\x02\x02\x02\u{c6}\u{c4}\x03\x02\x02\x02\u{c6}\u{c7}\
		\x03\x02\x02\x02\u{c7}\x44\x03\x02\x02\x02\u{c8}\u{c9}\x07\x32\x02\x02\
		\u{c9}\u{cb}\x09\x06\x02\x02\u{ca}\u{cc}\x05\x59\x2d\x02\u{cb}\u{ca}\x03\
		\x02\x02\x02\u{cc}\u{cd}\x03\x02\x02\x02\u{cd}\u{cb}\x03\x02\x02\x02\u{cd}\
		\u{ce}\x03\x02\x02\x02\u{ce}\x46\x03\x02\x02\x02\u{cf}\u{d1}\x05\x57\x2c\
		\x02\u{d0}\u{cf}\x03\x02\x02\x02\u{d1}\u{d2}\x03\x02\x02\x02\u{d2}\u{d0}\
		\x03\x02\x02\x02\u{d2}\u{d3}\x03\x02\x02\x02\u{d3}\u{d4}\x03\x02\x02\x02\
		\u{d4}\u{d8}\x07\x30\x02\x02\u{d5}\u{d7}\x05\x57\x2c\x02\u{d6}\u{d5}\x03\
		\x02\x02\x02\u{d7}\u{da}\x03\x02\x02\x02\u{d8}\u{d6}\x03\x02\x02\x02\u{d8}\
		\u{d9}\x03\x02\x02\x02\u{d9}\u{dc}\x03\x02\x02\x02\u{da}\u{d8}\x03\x02\
		\x02\x02\u{db}\u{dd}\x05\x4b\x26\x02\u{dc}\u{db}\x03\x02\x02\x02\u{dc}\
		\u{dd}\x03\x02\x02\x02\u{dd}\u{ef}\x03\x02\x02\x02\u{de}\u{e0}\x07\x30\
		\x02\x02\u{df}\u{e1}\x05\x57\x2c\x02\u{e0}\u{df}\x03\x02\x02\x02\u{e1}\
		\u{e2}\x03\x02\x02\x02\u{e2}\u{e0}\x03\x02\x02\x02\u{e2}\u{e3}\x03\x02\
		\x02\x02\u{e3}\u{e5}\x03\x02\x02\x02\u{e4}\u{e6}\x05\x4b\x26\x02\u{e5}\
		\u{e4}\x03\x02\x02\x02\u{e5}\u{e6}\x03\x02\x02\x02\u{e6}\u{ef}\x03\x02\
		\x02\x02\u{e7}\u{e9}\x05\x57\x2c\x02\u{e8}\u{e7}\x03\x02\x02\x02\u{e9}\
		\u{ea}\x03\x02\x02\x02\u{ea}\u{e8}\x03\x02\x02\x02\u{ea}\u{eb}\x03\x02\
		\x02\x02\u{eb}\u{ec}\x03\x02\x02\x02\u{ec}\u{ed}\x05\x4b\x26\x02\u{ed}\
		\u{ef}\x03\x02\x02\x02\u{ee}\u{d0}\x03\x02\x02\x02\u{ee}\u{de}\x03\x02\
		\x02\x02\u{ee}\u{e8}\x03\x02\x02\x02\u{ef}\x48\x03\x02\x02\x02\u{f0}\u{f1}\
		\x07\x32\x02\x02\u{f1}\u{f3}\x09\x06\x02\x02\u{f2}\u{f4}\x05\x59\x2d\x02\
		\u{f3}\u{f2}\x03\x02\x02\x02\u{f4}\u{f5}\x03\x02\x02\x02\u{f5}\u{f3}\x03\
		\x02\x02\x02\u{f5}\u{f6}\x03\x02\x02\x02\u{f6}\u{f7}\x03\x02\x02\x02\u{f7}\
		\u{fb}\x07\x30\x02\x02\u{f8}\u{fa}\x05\x59\x2d\x02\u{f9}\u{f8}\x03\x02\
		\x02\x02\u{fa}\u{fd}\x03\x02\x02\x02\u{fb}\u{f9}\x03\x02\x02\x02\u{fb}\
		\u{fc}\x03\x02\x02\x02\u{fc}\u{ff}\x03\x02\x02\x02\u{fd}\u{fb}\x03\x02\
		\x02\x02\u{fe}\u{100}\x05\x4d\x27\x02\u{ff}\u{fe}\x03\x02\x02\x02\u{ff}\
		\u{100}\x03\x02\x02\x02\u{100}\u{116}\x03\x02\x02\x02\u{101}\u{102}\x07\
		\x32\x02\x02\u{102}\u{103}\x09\x06\x02\x02\u{103}\u{105}\x07\x30\x02\x02\
		\u{104}\u{106}\x05\x59\x2d\x02\u{105}\u{104}\x03\x02\x02\x02\u{106}\u{107}\
		\x03\x02\x02\x02\u{107}\u{105}\x03\x02\x02\x02\u{107}\u{108}\x03\x02\x02\
		\x02\u{108}\u{10a}\x03\x02\x02\x02\u{109}\u{10b}\x05\x4d\x27\x02\u{10a}\
		\u{109}\x03\x02\x02\x02\u{10a}\u{10b}\x03\x02\x02\x02\u{10b}\u{116}\x03\
		\x02\x02\x02\u{10c}\u{10d}\x07\x32\x02\x02\u{10d}\u{10f}\x09\x06\x02\x02\
		\u{10e}\u{110}\x05\x59\x2d\x02\u{10f}\u{10e}\x03\x02\x02\x02\u{110}\u{111}\
		\x03\x02\x02\x02\u{111}\u{10f}\x03\x02\x02\x02\u{111}\u{112}\x03\x02\x02\
		\x02\u{112}\u{113}\x03\x02\x02\x02\u{113}\u{114}\x05\x4d\x27\x02\u{114}\
		\u{116}\x03\x02\x02\x02\u{115}\u{f0}\x03\x02\x02\x02\u{115}\u{101}\x03\
		\x02\x02\x02\u{115}\u{10c}\x03\x02\x02\x02\u{116}\x4a\x03\x02\x02\x02\u{117}\
		\u{119}\x09\x07\x02\x02\u{118}\u{11a}\x09\x08\x02\x02\u{119}\u{118}\x03\
		\x02\x02\x02\u{119}\u{11a}\x03\x02\x02\x02\u{11a}\u{11c}\x03\x02\x02\x02\
		\u{11b}\u{11d}\x05\x57\x2c\x02\u{11c}\u{11b}\x03\x02\x02\x02\u{11d}\u{11e}\
		\x03\x02\x02\x02\u{11e}\u{11c}\x03\x02\x02\x02\u{11e}\u{11f}\x03\x02\x02\
		\x02\u{11f}\x4c\x03\x02\x02\x02\u{120}\u{122}\x09\x09\x02\x02\u{121}\u{123}\
		\x09\x08\x02\x02\u{122}\u{121}\x03\x02\x02\x02\u{122}\u{123}\x03\x02\x02\
		\x02\u{123}\u{125}\x03\x02\x02\x02\u{124}\u{126}\x05\x57\x2c\x02\u{125}\
		\u{124}\x03\x02\x02\x02\u{126}\u{127}\x03\x02\x02\x02\u{127}\u{125}\x03\
		\x02\x02\x02\u{127}\u{128}\x03\x02\x02\x02\u{128}\x4e\x03\x02\x02\x02\u{129}\
		\u{12a}\x07\x5e\x02\x02\u{12a}\u{135}\x05\x57\x2c\x02\u{12b}\u{12c}\x07\
		\x5e\x02\x02\u{12c}\u{12d}\x05\x57\x2c\x02\u{12d}\u{12e}\x05\x57\x2c\x02\
		\u{12e}\u{135}\x03\x02\x02\x02\u{12f}\u{130}\x07\x5e\x02\x02\u{130}\u{131}\
		\x09\x0a\x02\x02\u{131}\u{132}\x05\x57\x2c\x02\u{132}\u{133}\x05\x57\x2c\
		\x02\u{133}\u{135}\x03\x02\x02\x02\u{134}\u{129}\x03\x02\x02\x02\u{134}\
		\u{12b}\x03\x02\x02\x02\u{134}\u{12f}\x03\x02\x02\x02\u{135}\x50\x03\x02\
		\x02\x02\u{136}\u{137}\x07\x5e\x02\x02\u{137}\u{141}\x09\x0b\x02\x02\u{138}\
		\u{13a}\x07\x5e\x02\x02\u{139}\u{13b}\x07\x0f\x02\x02\u{13a}\u{139}\x03\
		\x02\x02\x02\u{13a}\u{13b}\x03\x02\x02\x02\u{13b}\u{13c}\x03\x02\x02\x02\
		\u{13c}\u{141}\x07\x0c\x02\x02\u{13d}\u{141}\x05\x4f\x28\x02\u{13e}\u{141}\
		\x05\x53\x2a\x02\u{13f}\u{141}\x05\x55\x2b\x02\u{140}\u{136}\x03\x02\x02\
		\x02\u{140}\u{138}\x03\x02\x02\x02\u{140}\u{13d}\x03\x02\x02\x02\u{140}\
		\u{13e}\x03\x02\x02\x02\u{140}\u{13f}\x03\x02\x02\x02\u{141}\x52\x03\x02\
		\x02\x02\u{142}\u{143}\x07\x5e\x02\x02\u{143}\u{144}\x07\x7a\x02\x02\u{144}\
		\u{145}\x05\x59\x2d\x02\u{145}\u{146}\x05\x59\x2d\x02\u{146}\x54\x03\x02\
		\x02\x02\u{147}\u{148}\x07\x5e\x02\x02\u{148}\u{149}\x07\x77\x02\x02\u{149}\
		\u{14a}\x07\x7d\x02\x02\u{14a}\u{14c}\x03\x02\x02\x02\u{14b}\u{14d}\x05\
		\x59\x2d\x02\u{14c}\u{14b}\x03\x02\x02\x02\u{14d}\u{14e}\x03\x02\x02\x02\
		\u{14e}\u{14c}\x03\x02\x02\x02\u{14e}\u{14f}\x03\x02\x02\x02\u{14f}\u{150}\
		\x03\x02\x02\x02\u{150}\u{151}\x07\x7f\x02\x02\u{151}\x56\x03\x02\x02\x02\
		\u{152}\u{153}\x09\x0c\x02\x02\u{153}\x58\x03\x02\x02\x02\u{154}\u{155}\
		\x09\x0d\x02\x02\u{155}\x5a\x03\x02\x02\x02\u{156}\u{157}\x07\x3f\x02\x02\
		\u{157}\u{158}\x05\x5b\x2e\x02\u{158}\u{159}\x07\x3f\x02\x02\u{159}\u{163}\
		\x03\x02\x02\x02\u{15a}\u{15e}\x07\x5d\x02\x02\u{15b}\u{15d}\x0b\x02\x02\
		\x02\u{15c}\u{15b}\x03\x02\x02\x02\u{15d}\u{160}\x03\x02\x02\x02\u{15e}\
		\u{15f}\x03\x02\x02\x02\u{15e}\u{15c}\x03\x02\x02\x02\u{15f}\u{161}\x03\
		\x02\x02\x02\u{160}\u{15e}\x03\x02\x02\x02\u{161}\u{163}\x07\x5f\x02\x02\
		\u{162}\u{156}\x03\x02\x02\x02\u{162}\u{15a}\x03\x02\x02\x02\u{163}\x5c\
		\x03\x02\x02\x02\u{164}\u{165}\x07\x2f\x02\x02\u{165}\u{166}\x07\x2f\x02\
		\x02\u{166}\u{167}\x07\x5d\x02\x02\u{167}\u{168}\x03\x02\x02\x02\u{168}\
		\u{169}\x05\x5b\x2e\x02\u{169}\u{16a}\x07\x5f\x02\x02\u{16a}\u{16b}\x03\
		\x02\x02\x02\u{16b}\u{16c}\x08\x2f\x02\x02\u{16c}\x5e\x03\x02\x02\x02\u{16d}\
		\u{16e}\x07\x2f\x02\x02\u{16e}\u{16f}\x07\x2f\x02\x02\u{16f}\u{18d}\x03\
		\x02\x02\x02\u{170}\u{18e}\x03\x02\x02\x02\u{171}\u{175}\x07\x5d\x02\x02\
		\u{172}\u{174}\x07\x3f\x02\x02\u{173}\u{172}\x03\x02\x02\x02\u{174}\u{177}\
		\x03\x02\x02\x02\u{175}\u{173}\x03\x02\x02\x02\u{175}\u{176}\x03\x02\x02\
		\x02\u{176}\u{18e}\x03\x02\x02\x02\u{177}\u{175}\x03\x02\x02\x02\u{178}\
		\u{17c}\x07\x5d\x02\x02\u{179}\u{17b}\x07\x3f\x02\x02\u{17a}\u{179}\x03\
		\x02\x02\x02\u{17b}\u{17e}\x03\x02\x02\x02\u{17c}\u{17a}\x03\x02\x02\x02\
		\u{17c}\u{17d}\x03\x02\x02\x02\u{17d}\u{17f}\x03\x02\x02\x02\u{17e}\u{17c}\
		\x03\x02\x02\x02\u{17f}\u{183}\x0a\x0e\x02\x02\u{180}\u{182}\x0a\x0f\x02\
		\x02\u{181}\u{180}\x03\x02\x02\x02\u{182}\u{185}\x03\x02\x02\x02\u{183}\
		\u{181}\x03\x02\x02\x02\u{183}\u{184}\x03\x02\x02\x02\u{184}\u{18e}\x03\
		\x02\x02\x02\u{185}\u{183}\x03\x02\x02\x02\u{186}\u{18a}\x0a\x10\x02\x02\
		\u{187}\u{189}\x0a\x0f\x02\x02\u{188}\u{187}\x03\x02\x02\x02\u{189}\u{18c}\
		\x03\x02\x02\x02\u{18a}\u{188}\x03\x02\x02\x02\u{18a}\u{18b}\x03\x02\x02\
		\x02\u{18b}\u{18e}\x03\x02\x02\x02\u{18c}\u{18a}\x03\x02\x02\x02\u{18d}\
		\u{170}\x03\x02\x02\x02\u{18d}\u{171}\x03\x02\x02\x02\u{18d}\u{178}\x03\
		\x02\x02\x02\u{18d}\u{186}\x03\x02\x02\x02\u{18e}\u{192}\x03\x02\x02\x02\
		\u{18f}\u{190}\x07\x0f\x02\x02\u{190}\u{193}\x07\x0c\x02\x02\u{191}\u{193}\
		\x09\x11\x02\x02\u{192}\u{18f}\x03\x02\x02\x02\u{192}\u{191}\x03\x02\x02\
		\x02\u{193}\u{194}\x03\x02\x02\x02\u{194}\u{195}\x08\x30\x02\x02\u{195}\
		\x60\x03\x02\x02\x02\u{196}\u{198}\x09\x12\x02\x02\u{197}\u{196}\x03\x02\
		\x02\x02\u{198}\u{199}\x03\x02\x02\x02\u{199}\u{197}\x03\x02\x02\x02\u{199}\
		\u{19a}\x03\x02\x02\x02\u{19a}\u{19b}\x03\x02\x02\x02\u{19b}\u{19c}\x08\
		\x31\x02\x02\u{19c}\x62\x03\x02\x02\x02\x29\x02\u{ac}\u{b2}\u{b4}\u{bc}\
		\u{be}\u{c6}\u{cd}\u{d2}\u{d8}\u{dc}\u{e2}\u{e5}\u{ea}\u{ee}\u{f5}\u{fb}\
		\u{ff}\u{107}\u{10a}\u{111}\u{115}\u{119}\u{11e}\u{122}\u{127}\u{134}\u{13a}\
		\u{140}\u{14e}\u{15e}\u{162}\u{175}\u{17c}\u{183}\u{18a}\u{18d}\u{192}\
		\u{199}\x03\x02\x03\x02";
